diff --git a/src/loaders/s3m_load.c b/src/loaders/s3m_load.c
index 61763c5e..d804582a 100644
--- a/src/loaders/s3m_load.c
+++ b/src/loaders/s3m_load.c
@@ -512,6 +512,7 @@ static int s3m_load(struct module_data *m, HIO_HANDLE * f, const int start)
 		struct xmp_instrument *xxi = &mod->xxi[i];
 		struct xmp_sample *xxs = &mod->xxs[i];
 		struct xmp_subinstrument *sub;
+		int load_sample_flags;
 
 		xxi->sub = calloc(sizeof(struct xmp_subinstrument), 1);
 		if (xxi->sub == NULL) {
@@ -585,7 +586,7 @@ static int s3m_load(struct module_data *m, HIO_HANDLE * f, const int start)
 		sih.loopend = hio_read32l(f);	/* Loop end */
 		sih.vol = hio_read8(f);		/* Volume */
 		sih.rsvd1 = hio_read8(f);	/* Reserved */
-		sih.pack = hio_read8(f);	/* Packing type (not used) */
+		sih.pack = hio_read8(f);	/* Packing type */
 		sih.flags = hio_read8(f);	/* Loop/stereo/16bit flags */
 		sih.c2spd = hio_read16l(f);	/* C 4 speed */
 		sih.rsvd2 = hio_read16l(f);	/* Reserved */
@@ -620,6 +621,11 @@ static int s3m_load(struct module_data *m, HIO_HANDLE * f, const int start)
 			xxs->flg |= XMP_SAMPLE_16BIT;
 		}
 
+		load_sample_flags = (sfh.ffi == 1) ? 0 : SAMPLE_FLAG_UNS;
+		if (sih.pack == 4) {
+			load_sample_flags = SAMPLE_FLAG_ADPCM;
+		}
+
 		sub->vol = sih.vol;
 		sih.magic = 0;
 
@@ -635,8 +641,7 @@ static int s3m_load(struct module_data *m, HIO_HANDLE * f, const int start)
 
 		hio_seek(f, start + 16L * sih.memseg, SEEK_SET);
 
-		ret = libxmp_load_sample(m, f, sfh.ffi == 1 ? 0 : SAMPLE_FLAG_UNS,
-								xxs, NULL);
+		ret = libxmp_load_sample(m, f, load_sample_flags, xxs, NULL);
 		if (ret < 0) {
 			goto err3;
 		}
