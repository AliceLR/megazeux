diff -Nudr -x .svn libmodplug.pristine/src/libmodplug/sndfile.h libmodplug/src/libmodplug/sndfile.h
--- libmodplug.pristine/src/libmodplug/sndfile.h	2009-12-31 16:33:04.000000000 +0000
+++ libmodplug/src/libmodplug/sndfile.h	2009-12-31 16:18:59.000000000 +0000
@@ -602,7 +602,7 @@
 	UINT GetMaxPosition() const;
 	void SetCurrentPos(UINT nPos);
 	void SetCurrentOrder(UINT nOrder);
-	void GetTitle(LPSTR s) const { lstrcpyn(s,m_szNames[0],32); }
+	void GetTitle(LPSTR s) const { lstrcpynA(s,m_szNames[0],32); }
 	LPCSTR GetTitle() const { return m_szNames[0]; }
 	UINT GetSampleName(UINT nSample,LPSTR s=NULL) const;
 	UINT GetInstrumentName(UINT nInstr,LPSTR s=NULL) const;
diff -Nudr -x .svn libmodplug.pristine/src/libmodplug/stdafx.h libmodplug/src/libmodplug/stdafx.h
--- libmodplug.pristine/src/libmodplug/stdafx.h	2009-12-31 16:33:04.000000000 +0000
+++ libmodplug/src/libmodplug/stdafx.h	2009-12-31 15:59:12.000000000 +0000
@@ -38,9 +38,9 @@
 
 #define srandom(_seed)  srand(_seed)
 #define random()        rand()
-#define sleep(_ms)      Sleep(_ms)
+#define sleep(_ms)      Sleep(_ms * 1000)
 
-inline void ProcessPlugins(int n) {}
+static inline void ProcessPlugins(int n) {}
 
 #else
 
@@ -104,9 +104,9 @@
 #define MODPLUG_NO_FILESAVE
 #define NO_AGC
 #define LPCTSTR LPCSTR
-#define lstrcpyn strncpy
-#define lstrcpy strcpy
-#define lstrcmp strcmp
+#define lstrcpynA strncpy
+#define lstrcpyA strcpy
+#define lstrcmpA strcmp
 #define WAVE_FORMAT_PCM 1
 //#define ENABLE_EQ
 
@@ -125,7 +125,7 @@
 #define GlobalFreePtr(p) free((void *)(p))
 
 #define strnicmp(a,b,c)		strncasecmp(a,b,c)
-#define wsprintf			sprintf
+#define wsprintfA		sprintf
 
 #ifndef FALSE
 #define FALSE	false
diff -Nudr -x .svn libmodplug.pristine/src/load_amf.cpp libmodplug/src/load_amf.cpp
--- libmodplug.pristine/src/load_amf.cpp	2009-12-31 16:33:04.000000000 +0000
+++ libmodplug/src/load_amf.cpp	2009-12-31 16:02:49.000000000 +0000
@@ -170,7 +170,7 @@
 	DWORD dwMemPos;
 	
 	if ((!lpStream) || (dwMemLength < 2048)) return FALSE;
-	if ((!strncmp((LPCTSTR)lpStream, "ASYLUM Music Format V1.0", 25)) && (dwMemLength > 4096))
+	if ((!strncmp((const char *)lpStream, "ASYLUM Music Format V1.0", 25)) && (dwMemLength > 4096))
 	{
 		UINT numorders, numpats, numsamples;
 
diff -Nudr -x .svn libmodplug.pristine/src/load_it.cpp libmodplug/src/load_it.cpp
--- libmodplug.pristine/src/load_it.cpp	2009-12-31 16:33:04.000000000 +0000
+++ libmodplug/src/load_it.cpp	2009-12-31 16:00:59.000000000 +0000
@@ -624,7 +624,7 @@
 	dwPatNamLen = 0;
 	dwChnNamLen = 0;
 	header.id = 0x4D504D49; // IMPM
-	lstrcpyn((char *)header.songname, m_szNames[0], 27);
+	lstrcpynA((char *)header.songname, m_szNames[0], 27);
 	header.reserved1 = 0x1004;
 	header.ordnum = 0;
 	while ((header.ordnum < MAX_ORDERS) && (Order[header.ordnum] < 0xFF)) header.ordnum++;
diff -Nudr -x .svn libmodplug.pristine/src/load_med.cpp libmodplug/src/load_med.cpp
--- libmodplug.pristine/src/load_med.cpp	2009-12-31 16:28:57.000000000 +0000
+++ libmodplug/src/load_med.cpp	2009-12-31 16:28:01.000000000 +0000
@@ -708,7 +708,7 @@
 				if (maxnamelen > 32) maxnamelen = 32;
 				for (UINT i=0; i<ientries; i++) if (i < m_nSamples)
 				{
-					lstrcpyn(m_szNames[i+1], psznames + i*ientrysz, maxnamelen);
+					lstrcpynA(m_szNames[i+1], psznames + i*ientrysz, maxnamelen);
 					m_szNames[i+1][31] = '\0';
 				}
 			}
@@ -739,7 +739,7 @@
 					if (trknamelen > MAX_CHANNELNAME) trknamelen = MAX_CHANNELNAME;
 					if ((trknameofs) && (trknameofs + trknamelen < dwMemLength))
 					{
-						lstrcpyn(ChnSettings[i].szName, (LPCSTR)(lpStream+trknameofs), MAX_CHANNELNAME);
+						lstrcpynA(ChnSettings[i].szName, (LPCSTR)(lpStream+trknameofs), MAX_CHANNELNAME);
 						ChnSettings[i].szName[MAX_CHANNELNAME-1] = '\0';
 					}
 				}
diff -Nudr -x .svn libmodplug.pristine/src/load_mod.cpp libmodplug/src/load_mod.cpp
--- libmodplug.pristine/src/load_mod.cpp	2009-12-31 16:33:04.000000000 +0000
+++ libmodplug/src/load_mod.cpp	2009-12-31 16:02:49.000000000 +0000
@@ -437,9 +437,9 @@
 	fwrite(ord, 128, 1, f);
 	// Writing signature
 	if (m_nChannels == 4)
-		lstrcpy((LPSTR)&bTab, "M.K.");
+		lstrcpyA((LPSTR)&bTab, "M.K.");
 	else
-		wsprintf((LPSTR)&bTab, "%luCHN", m_nChannels);
+		wsprintfA((LPSTR)&bTab, "%luCHN", m_nChannels);
 	fwrite(bTab, 4, 1, f);
 	// Writing patterns
 	for (UINT ipat=0; ipat<nbp; ipat++) if (Patterns[ipat])
diff -Nudr -x .svn libmodplug.pristine/src/load_s3m.cpp libmodplug/src/load_s3m.cpp
--- libmodplug.pristine/src/load_s3m.cpp	2009-12-31 16:33:04.000000000 +0000
+++ libmodplug/src/load_s3m.cpp	2009-12-31 16:02:49.000000000 +0000
@@ -285,7 +285,7 @@
 		insflags[iSmp-1] = s[0x1F];
 		inspack[iSmp-1] = s[0x1E];
 		s[0x4C] = 0;
-		lstrcpy(m_szNames[iSmp], (LPCSTR)&s[0x30]);
+		lstrcpyA(m_szNames[iSmp], (LPCSTR)&s[0x30]);
 		if ((s[0]==1) && (s[0x4E]=='R') && (s[0x4F]=='S'))
 		{
 			UINT j = bswapLE32(*((LPDWORD)(s+0x10)));
diff -Nudr -x .svn libmodplug.pristine/src/load_xm.cpp libmodplug/src/load_xm.cpp
--- libmodplug.pristine/src/load_xm.cpp	2009-12-31 16:33:04.000000000 +0000
+++ libmodplug/src/load_xm.cpp	2009-12-31 16:02:49.000000000 +0000
@@ -600,7 +600,7 @@
 	fwrite("Extended Module: ", 17, 1, f);
 	fwrite(m_szNames[0], 20, 1, f);
 	s[0] = 0x1A;
-	lstrcpy((LPSTR)&s[1], (nPacking) ? "MOD Plugin packed   " : "FastTracker v2.00   ");
+	lstrcpyA((LPSTR)&s[1], (nPacking) ? "MOD Plugin packed   " : "FastTracker v2.00   ");
 	s[21] = 0x04;
 	s[22] = 0x01;
 	fwrite(s, 23, 1, f);
diff -Nudr -x .svn libmodplug.pristine/src/sndfile.cpp libmodplug/src/sndfile.cpp
--- libmodplug.pristine/src/sndfile.cpp	2009-12-31 16:33:04.000000000 +0000
+++ libmodplug/src/sndfile.cpp	2009-12-31 16:12:10.000000000 +0000
@@ -378,13 +378,13 @@
 //-----------------------------
 {
 	memset(&m_MidiCfg, 0, sizeof(m_MidiCfg));
-	lstrcpy(&m_MidiCfg.szMidiGlb[MIDIOUT_START*32], "FF");
-	lstrcpy(&m_MidiCfg.szMidiGlb[MIDIOUT_STOP*32], "FC");
-	lstrcpy(&m_MidiCfg.szMidiGlb[MIDIOUT_NOTEON*32], "9c n v");
-	lstrcpy(&m_MidiCfg.szMidiGlb[MIDIOUT_NOTEOFF*32], "9c n 0");
-	lstrcpy(&m_MidiCfg.szMidiGlb[MIDIOUT_PROGRAM*32], "Cc p");
-	lstrcpy(&m_MidiCfg.szMidiSFXExt[0], "F0F000z");
-	for (int iz=0; iz<16; iz++) wsprintf(&m_MidiCfg.szMidiZXXExt[iz*32], "F0F001%02X", iz*8);
+	lstrcpyA(&m_MidiCfg.szMidiGlb[MIDIOUT_START*32], "FF");
+	lstrcpyA(&m_MidiCfg.szMidiGlb[MIDIOUT_STOP*32], "FC");
+	lstrcpyA(&m_MidiCfg.szMidiGlb[MIDIOUT_NOTEON*32], "9c n v");
+	lstrcpyA(&m_MidiCfg.szMidiGlb[MIDIOUT_NOTEOFF*32], "9c n 0");
+	lstrcpyA(&m_MidiCfg.szMidiGlb[MIDIOUT_PROGRAM*32], "Cc p");
+	lstrcpyA(&m_MidiCfg.szMidiSFXExt[0], "F0F000z");
+	for (int iz=0; iz<16; iz++) wsprintfA(&m_MidiCfg.szMidiZXXExt[iz*32], "F0F001%02X", iz*8);
 }
 
 
@@ -1639,7 +1639,7 @@
 //-----------------------------------------------------------
 {
 	//---GCCFIX:  Removed assembly.
-	return (DWORD)(8363*pow(2, (transp*128+ftune)/(1536)));
+	return (DWORD)(8363*pow(2.0, (transp*128+ftune)/(1536)));
 
 #ifdef MSC_VER
 	const float _fbase = 8363;
@@ -1679,7 +1679,7 @@
 //----------------------------------------------
 {
 	//---GCCFIX:  Removed assembly.
-	return int(1536*(log(freq/8363)/log(2)));
+	return int(1536*(log((double)freq/8363.0)/log(2.0)));
 
 #ifdef MSC_VER
 	const float _f1_8363 = 1.0f / 8363.0f;
@@ -1753,7 +1753,7 @@
 {
         char szName[MAX_PATTERNNAME] = "";   // changed from CHAR
 	if (nPat >= MAX_PATTERNS) return FALSE;
-	if (lpszName) lstrcpyn(szName, lpszName, MAX_PATTERNNAME);
+	if (lpszName) lstrcpynA(szName, lpszName, MAX_PATTERNNAME);
 	szName[MAX_PATTERNNAME-1] = 0;
 	if (!m_lpszPatternNames) m_nPatternNames = 0;
 	if (nPat >= m_nPatternNames)
