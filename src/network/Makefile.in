##
# MegaZeux Network Makefile fragment
##

.PHONY: network network.debug network_clean network_target_clean

network_src = src/network
network_obj = src/network/.build

network_flags   := ${ZLIB_CFLAGS} ${core_cflags} ${core_flags}
network_ldflags := ${ZLIB_LDFLAGS}

ifeq (${PLATFORM},mingw)
network_flags   += -DNETWORK_LIBSPEC="__declspec(dllexport)" ${SDL_CFLAGS}
network_ldflags += ${SDL_LDFLAGS}
endif

${network_obj}/%.o: ${network_src}/%.c
	$(if ${V},,@echo "  CC      " $<)
	${CC} -MD ${network_flags} -c $< -o $@

network_objs := \
  ${network_obj}/host.o ${network_obj}/manifest.o \
  ${network_obj}/sha256.o ${network_obj}/updater.o

-include ${network_objs:.o=.d}

${network_objs}: $(filter-out $(wildcard ${network_obj}), ${network_obj})

ifeq (${BUILD_MODULAR},1)

network_target := ${DSOPRE}network${DSOPOST}

${network_target}: ${network_objs} ${core_target}
	$(if ${V},,@echo "  LINK    " $@)
	${CC} ${DSOLDFLAGS} -o $@ ${network_objs} ${network_ldflags} \
	  ${LDFLAGS} ${DSOSONAME}$@ ${DSORPATH} -L. -lcore

network_target_clean:
	$(if ${V},,@echo "  RM      " ${network_target} ${network_target}.debug)
	${RM} ${network_target} ${network_target}.debug

else

network_target := ${network_objs}

network_target_clean:

endif

server         := server${BINEXT}
server_objs    := ${network_obj}/server.o
server_ldflags := ${SDL_LDFLAGS}

-include ${server_objs:.o=.d}

${server}: ${core_target} ${network_target} ${server_objs}
	$(if ${V},,@echo "  LINK    " ${server})
ifeq (${BUILD_MODULAR},1)
	${CC} ${server_objs} -o ${server} ${LDFLAGS} \
	  ${DSORPATH} -L. -lcore -lnetwork ${server_ldflags}
else
	${LINK_CC} ${server_objs} ${core_target} ${network_target} \
	  -o ${server} ${LDFLAGS} ${core_ldflags} ${network_ldflags} \
	  ${server_ldflags}
endif

#network: ${server}
#network.debug: ${server}.debug

network_clean: network_target_clean
	$(if ${V},,@echo "  RM      " ${network_obj})
	${RM} -r ${network_obj}
#	$(if ${V},,@echo "  RM      " ${server} ${server}.debug)
#	${RM} ${server} ${server}.debug
