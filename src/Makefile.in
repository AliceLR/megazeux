##
# MegaZeux Makefile fragment
##

include contrib/gdm2s3m/src/Makefile.in
include contrib/icons/Makefile.in
include contrib/libmodplug/src/Makefile.in

.PHONY: mzx_clean

LINK_CC := ${CC}

mzx_obj = src/.build
mzx_src = src

core_flags   += -W -Wno-unused-parameter -ffast-math -funsigned-char
core_flags   += -Wmissing-format-attribute -Wpointer-arith
core_flags   += -Wwrite-strings
core_cflags  += -Wmissing-prototypes
core_cxxflags = -DHAVE_INTTYPES_H

core_flags   += -I${mzx_src} -I${PREFIX}/include
core_ldflags := ${core_ldflags} ${ARCH_LDFLAGS}

${mzx_obj}/%.o: ${mzx_src}/%.c
	$(if ${V},,@echo "  CC      " $<)
	${CC} -MD ${CFLAGS} ${core_flags} ${core_cflags} -c $< -o $@

${mzx_obj}/%.o: ${mzx_src}/%.cpp
	$(if ${V},,@echo "  CXX     " $<)
	${CXX} -MD ${CXXFLAGS} ${core_flags} ${core_cxxflags} -c $< -o $@

%.debug: %${BINEXT}
	$(if ${V},,@echo "  OBJCOPY " --only-keep-debug $< $@)
	${OBJCOPY} --only-keep-debug $< $@
	$(if ${V},,@echo "  STRIP   " $<)
	${STRIP} $<
	$(if ${V},,@echo "  OBJCOPY " --add-gnu-debuglink $@ $<)
	${OBJCOPY} --add-gnu-debuglink=$@ $<
	@touch $@

#
# Lists mandatory C language sources (mangled to object names) required
# to build the main binary. Please keep this sorted alphabetically.
#
core_cobjs := ${mzx_obj}/board.o ${mzx_obj}/configure.o
core_cobjs += ${mzx_obj}/counter.o ${mzx_obj}/debug.o
core_cobjs += ${mzx_obj}/data.o ${mzx_obj}/decrypt.o
core_cobjs += ${mzx_obj}/error.o ${mzx_obj}/event.o
core_cobjs += ${mzx_obj}/expr.o ${mzx_obj}/fsafeopen.o
core_cobjs += ${mzx_obj}/game2.o ${mzx_obj}/game.o
core_cobjs += ${mzx_obj}/graphics.o ${mzx_obj}/idarray.o
core_cobjs += ${mzx_obj}/idput.o ${mzx_obj}/intake.o
core_cobjs += ${mzx_obj}/mzm.o ${mzx_obj}/rasm.o
core_cobjs += ${mzx_obj}/render.o ${mzx_obj}/robot.o
core_cobjs += ${mzx_obj}/runrobo2.o ${mzx_obj}/scrdisp.o
core_cobjs += ${mzx_obj}/sfx.o ${mzx_obj}/sprite.o
core_cobjs += ${mzx_obj}/util.o ${mzx_obj}/window.o
core_cobjs += ${mzx_obj}/world.o

#
# Lists mandatory C++ language sources (mangled to object names) required
# to build the main binary. Currently there are only optional sources.
#
core_cxxobjs :=

#
# Hack to avoid silly warnings from devkitPro headers
#
ifeq ($(or ${BUILD_WII},${BUILD_NDS},${BUILD_PSP}),)
core_cflags += -Wstrict-prototypes
endif

ifeq (${BUILD_NDS},1)
#
# This is really just a hack and should be moved elsewhere
#
core_cobjs += arch/nds/ram.o arch/nds/exception.o
core_cobjs += arch/nds/malloc.o arch/nds/extmem.o
endif

ifeq (${BUILD_HELPSYS},1)
core_cobjs += ${mzx_obj}/helpsys.o
endif

ifeq (${BUILD_RENDER_SOFT},1)
core_cobjs += ${mzx_obj}/render_soft.o
endif

ifeq (${BUILD_RENDER_GL},1)
core_cobjs += ${mzx_obj}/render_gl.o
core_cobjs += ${mzx_obj}/render_gl1.o ${mzx_obj}/render_gl2.o
endif

ifeq (${BUILD_RENDER_GLSL},1)
core_cobjs += ${mzx_obj}/render_glsl.o
endif

ifeq (${BUILD_RENDER_YUV},1)
core_cobjs += ${mzx_obj}/render_yuv.o
core_cobjs += ${mzx_obj}/render_yuv1.o ${mzx_obj}/render_yuv2.o
endif

ifeq (${BUILD_RENDER_GP2X},1)
core_cobjs += ${mzx_obj}/render_gp2x.o
endif

ifeq (${BUILD_RENDER_GX},1)
core_cobjs += ${mzx_obj}/render_gx.o
endif

ifeq (${BUILD_NDS},1)
core_cobjs += ${mzx_obj}/render_nds.o
endif

ifeq (${EMBED_ICONS},1)
core_ldflags := ${icons} ${core_ldflags}
${mzx}: ${icons}
endif

ifeq (${BUILD_MODPLUG},1)
core_cflags += -I${gdm2s3m_src}
core_cobjs += ${gdm2s3m_objs}
core_flags += -I${libmodplug_src} -I${libmodplug_src}/libmodplug
core_cxxobjs += ${mzx_obj}/audio_modplug.o ${libmodplug_objs}
LINK_CC := ${CXX}
endif

ifeq (${BUILD_MIKMOD},1)
core_ldflags := ${MIKMOD_LDFLAGS} ${core_ldflags}
core_cobjs += ${mzx_obj}/audio_mikmod.o
endif

ifeq (${LIBPNG},1)
core_flags += ${LIBPNG_CFLAGS}
core_ldflags := ${LIBPNG_LDFLAGS} ${core_ldflags}
core_cobjs += ${mzx_obj}/pngops.o
endif

ifeq (${BUILD_AUDIO},1)
core_cobjs += ${mzx_obj}/audio.o
core_flags += ${VORBIS_CFLAGS}
core_ldflags := ${VORBIS_LDFLAGS} ${core_ldflags}
endif

ifeq (${PTHREAD},1)
core_ldflags := -lpthread ${core_ldflags}
endif

ifeq (${BUILD_SDL},1)

core_cobjs += ${mzx_obj}/event_sdl.o ${mzx_obj}/platform_sdl.o
core_cobjs += ${mzx_obj}/render_sdl.o

ifeq (${BUILD_AUDIO},1)
core_cobjs += ${mzx_obj}/audio_sdl.o
endif

core_flags += ${SDL_CFLAGS}
core_ldflags += ${SDL_LDFLAGS}

endif

ifeq (${BUILD_WII},1)
core_cobjs += ${mzx_obj}/event_wii.o ${mzx_obj}/platform_wii.o
ifeq (${BUILD_AUDIO},1)
core_cobjs += ${mzx_obj}/audio_wii.o
endif
endif

common_objs := ${mzx_obj}/main.o ${core_cobjs} ${core_cxxobjs}

${common_objs}: $(filter-out $(wildcard ${mzx_obj}), ${mzx_obj})

ifeq (${BUILD_EDITOR},1)

include src/editor/Makefile.in

mzx_objs := ${common_objs} ${editor_objs}

-include ${mzx_objs:.o=.d}

${mzx}: ${mzx_objs}
	$(if ${V},,@echo "  LINK    " ${mzx})
	${LINK_CC} ${mzx_objs} -o ${mzx} ${LDFLAGS} ${core_ldflags}

else

${mzx}:
	@echo "--> Building of editor disabled."

endif

mzxrun_objs := ${common_objs} ${mzx_obj}/edit_stubs.o

-include ${mzxrun_objs:.o=.d}

${mzxrun}: ${mzxrun_objs}
	$(if ${V},,@echo "  LINK    " ${mzxrun})
	${LINK_CC} ${mzxrun_objs} -o ${mzxrun} ${LDFLAGS} ${core_ldflags}

${mzxdbg}: ${mzx}
${mzxrundbg} : ${mzxrun}

mzx_clean: editor_clean gdm2s3m_clean icons_clean libmodplug_clean
	$(if ${V},,@echo "  RM      " ${mzx_obj})
	${RM} -r ${mzx_obj}
	$(if ${V},,@echo "  RM      " ${mzxrun} ${mzxrundbg})
	${RM} ${mzxrun} ${mzxrundbg}
	$(if ${V},,@echo "  RM      " ${mzx} ${mzxdbg})
	${RM} ${mzx} ${mzxdbg}
