##
# MegaZeux Makefile fragment
##

include contrib/gdm2s3m/src/Makefile.in
include contrib/libmodplug/src/Makefile.in

.PHONY: ${mzx}_clean ${txt2hlp}_clean

ifneq (${DATE},0)
mzx_cflags += -DMZX_VERSION=\"${VERSION}\ \(`date +%Y%m%d`\)\"
else
mzx_cflags += -DMZX_VERSION=\"${VERSION}\"
endif

mzx_base     = src
mzx_cflags   += -W -Wno-unused-parameter -ffast-math -funsigned-char
mzx_cflags   += ${SDL_CFLAGS} ${VORBIS_CFLAGS}
mzx_cflags   += -I${mzx_base} -I${PREFIX}/include
mzx_ldflags  += ${SDL_LDFLAGS} ${VORBIS_LDFLAGS}
mzx_cxxflags = ${mzx_cflags}

txt2hlp_base = src/utils
txt2hlp = ${txt2hlp_base}/txt2hlp${BINEXT}
txt2hlp_objs = ${txt2hlp_base}/txt2hlp.o

${txt2hlp_base}/%.o ${txt2hlp_base}/%.dbg.o: ${txt2hlp_base}/%.c
ifeq (${V},1)
	${CC} ${CFLAGS} -c $< -o $@
else
	@echo "  CC      " $<
	@${CC} ${CFLAGS} -c $< -o $@
endif

${mzx_base}/%.o ${mzx_base}/%.dbg.o: ${mzx_base}/%.c
ifeq (${V},1)
	${CC} ${CFLAGS} ${mzx_cflags} -c $< -o $@
else
	@echo "  CC      " $<
	@${CC} ${CFLAGS} ${mzx_cflags} -c $< -o $@
endif

${mzx_base}/%.o ${mzx_base}/%.dbg.o: ${mzx_base}/%.cpp
ifeq (${V},1)
	${CXX} ${CXXFLAGS} ${mzx_cflags} -c $< -o $@
else
	@echo "  CXX     " $<
	@${CXX} ${CXXFLAGS} ${mzx_cflags} -c $< -o $@
endif

# FIXME: Sort alphabetically
mzx_objs = \
    ${mzx_base}/main.${o} ${mzx_base}/graphics.${o} ${mzx_base}/window.${o} \
    ${mzx_base}/hexchar.${o} ${mzx_base}/event.${o} ${mzx_base}/error.${o} \
    ${mzx_base}/helpsys.${o} ${mzx_base}/world.${o} ${mzx_base}/board.${o} \
    ${mzx_base}/robot.${o} ${mzx_base}/idput.${o} ${mzx_base}/intake.${o} \
    ${mzx_base}/scrdisp.${o} ${mzx_base}/data.${o} ${mzx_base}/game.${o} \
    ${mzx_base}/counter.${o} ${mzx_base}/idarray.${o} ${mzx_base}/delay.${o} \
    ${mzx_base}/game2.${o} ${mzx_base}/expr.${o} ${mzx_base}/sprite.${o} \
    ${mzx_base}/runrobo2.${o} ${mzx_base}/mzm.${o} ${mzx_base}/decrypt.${o} \
    ${mzx_base}/edit.${o} ${mzx_base}/edit_di.${o} ${mzx_base}/block.${o} \
    ${mzx_base}/char_ed.${o} ${mzx_base}/pal_ed.${o} ${mzx_base}/param.${o} \
    ${mzx_base}/sfx_edit.${o} ${mzx_base}/fill.${o} ${mzx_base}/rasm.${o} \
    ${mzx_base}/robo_ed.${o} ${mzx_base}/configure.${o} ${mzx_base}/sfx.${o} \
    ${mzx_base}/fsafeopen.${o} ${mzx_base}/macro.${o} ${mzx_base}/render.${o}

ifeq (${BUILD_SOFTWARE},1)
mzx_objs += ${mzx_base}/render_soft.${o}
endif

ifeq (${BUILD_OPENGL},1)
mzx_objs += ${mzx_base}/render_gl.${o}
mzx_objs += ${mzx_base}/render_gl1.${o} ${mzx_base}/render_gl2.${o}
endif

ifeq (${BUILD_OVERLAY},1)
mzx_objs += ${mzx_base}/render_yuv.${o}
mzx_objs += ${mzx_base}/render_yuv1.${o} ${mzx_base}/render_yuv2.${o}
endif

ifeq (${BUILD_GP2X},1)
mzx_objs += ${mzx_base}/render_gp2x.${o}
endif

ifeq (${BUILD_MODPLUG},1)
mzx_cflags += -I${gdm2s3m_base}
mzx_cflags += -I${libmodplug_base} -I${libmodplug_base}/libmodplug
mzx_ldflags += ${gdm2s3m} ${libmodplug} -lstdc++
mzx_objs += ${mzx_base}/audio_modplug.${o}
endif

ifeq (${BUILD_MIKMOD},1)
mzx_ldflags += -L${PREFIX} -lmikmod
mzx_objs += ${mzx_base}/audio_mikmod.${o}
endif

ifeq (${LIBPNG},1)
mzx_cflags += ${LIBPNG_CFLAGS}
mzx_ldflags += ${LIBPNG_LDFLAGS}
endif

ifeq (${BUILD_AUDIO},1)
mzx_objs += ${mzx_base}/audio.${o}
endif

${txt2hlp}: ${txt2hlp_objs}
ifeq (${V},1)
	${CC} ${txt2hlp_objs} -o ${txt2hlp}
else
	@echo "  LINK    " ${txt2hlp}
	@${CC} ${txt2hlp_objs} -o ${txt2hlp}
endif
ifneq (${DEBUG},1)
ifeq (${V},1)
	${STRIP} ${txt2hlp}
else
	@echo "  STRIP   " ${txt2hlp}
	@${STRIP} ${txt2hlp}
endif
endif

${mzx}: ${gdm2s3m} ${libmodplug} ${mzx_objs} ${txt2hlp}
ifeq (${V},1)
	${CC} ${mzx_objs} ${mzx_ldflags} -o ${mzx}
else
	@echo "  LINK    " ${mzx}
	@${CC} ${mzx_objs} ${mzx_ldflags} -o ${mzx}
endif
ifneq (${DEBUG},1)
ifeq (${V},1)
	${STRIP} ${mzx}
else
	@echo "  STRIP   " ${mzx}
	@${STRIP} ${mzx}
endif
endif

${txt2hlp}_clean:
	@echo "  CLEAN   " ${txt2hlp_base}
	@rm -f ${txt2hlp_objs} ${txt2hlp}

${mzx}_clean: ${txt2hlp}_clean
	@echo "  CLEAN   " ${mzx_base}
	@rm -f ${mzx_objs} ${mzx}
