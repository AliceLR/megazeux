name: Regression tests

env:
  MZXDEPS_DEBIAN_SDL2:  "zlib1g-dev libpng-dev libogg-dev libvorbis-dev libsdl2-dev"
  MZXDEPS_DEBIAN_SDL1:  "zlib1g-dev libpng-dev libogg-dev libvorbis-dev libsdl1.2-dev"
  MZXDEPS_DEBIAN_CROSS: "p7zip-full"
  MZX_MAKE:             "make -j4"

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  #
  # Platform variants and distribution packages.
  #
  unix:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y --no-install-recommends $MZXDEPS_DEBIAN_SDL2
      - uses: actions/checkout@v2
      - name: Configure
        run: ./config.sh --platform unix --enable-release
      - name: Build
        run: $MZX_MAKE
      - name: Run tests
        run: $MZX_MAKE test
      - name: Package source .tar.xz
        run: make source
  # TODO ;-(
  #    - name: Install
  #      run: make install

  MSYS2-MINGW64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            base-devel git p7zip
            mingw-w64-x86_64-gcc    mingw-w64-x86_64-zlib      mingw-w64-x86_64-libpng
            mingw-w64-x86_64-libogg mingw-w64-x86_64-libvorbis mingw-w64-x86_64-SDL2
      - uses: actions/checkout@v2
      - name: Configure x64
        run: ./config.sh --platform win64 --enable-release
      - name: Build x64
        run: $MZX_MAKE
      - name: Test x64
        run: $MZX_MAKE test
      - name: Package x64 .zip
        run: make archive

  MSYS2-MINGW32:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Setup msys2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          update: true
          install: >-
            base-devel git p7zip
            mingw-w64-i686-gcc      mingw-w64-i686-zlib        mingw-w64-i686-libpng
            mingw-w64-i686-libogg   mingw-w64-i686-libvorbis   mingw-w64-i686-SDL2
      - uses: actions/checkout@v2
      - name: Configure x86
        run: ./config.sh --platform win32 --enable-release
      - name: Build x86
        run: $MZX_MAKE
      - name: Test x86
        run: $MZX_MAKE test
      - name: Package x86 .zip
        run: make archive

  AArch64-Switch:
    runs-on: ubuntu-latest
    container: devkitpro/devkita64
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y --no-install-recommends $MZXDEPS_DEBIAN_CROSS
      - run: echo "PATH=$DEVKITPRO/devkitA64/bin:$PATH" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Configure Switch
        run: arch/switch/CONFIG.SWITCH
      - name: Build Switch
        run: $MZX_MAKE
      - name: Package Switch .zip
        run: make archive

  ARM-3DS:
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y --no-install-recommends $MZXDEPS_DEBIAN_CROSS
      - run: echo "PATH=$DEVKITPRO/devkitARM/bin:$PATH" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Configure 3DS
        run: arch/3ds/CONFIG.3DS
      - name: Build 3DS
        run: $MZX_MAKE
      - name: Package 3DS .zip
        run: make archive

  ARM-NDS:
    runs-on: ubuntu-latest
    container: devkitpro/devkitarm
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y --no-install-recommends $MZXDEPS_DEBIAN_CROSS
      - run: echo "PATH=$DEVKITPRO/devkitARM/bin:$PATH" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Configure NDS
        run: arch/nds/CONFIG.NDS
      - name: Build NDS
        run: $MZX_MAKE
      - name: Package NDS .zip
        run: make archive

  PowerPC-Wii:
    runs-on: ubuntu-latest
    container: devkitpro/devkitppc
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y --no-install-recommends $MZXDEPS_DEBIAN_CROSS
      - run: echo "PATH=$DEVKITPRO/devkitPPC/bin:$PATH" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Configure Wii
        run: arch/wii/CONFIG.WII
      - name: Build Wii
        run: $MZX_MAKE
      - name: Package Wii .zip
        run: make archive

  PowerPC-WiiU:
    runs-on: ubuntu-latest
    container: devkitpro/devkitppc
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y --no-install-recommends $MZXDEPS_DEBIAN_CROSS
      - run: echo "PATH=$DEVKITPRO/devkitPPC/bin:$PATH" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Configure Wii U
        run: arch/wiiu/CONFIG.WIIU
      - name: Build Wii U
        run: $MZX_MAKE
      - name: Package Wii U .zip
        run: make archive

  #
  # Configuration variants.
  #
  SDL1-2:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y --no-install-recommends $MZXDEPS_DEBIAN_SDL1
      - uses: actions/checkout@v2
      - name: Configure
        run: ./config.sh --platform unix-devel --enable-release --disable-libsdl2
      - name: Build
        run: $MZX_MAKE
      - name: Run tests
        run: $MZX_MAKE test

  #
  # Sanitizers.
  #
  AddressSanitizer:
    runs-on: ubuntu-latest
    env:
      CC: clang
      CXX: clang++
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y --no-install-recommends $MZXDEPS_DEBIAN_SDL2
      - uses: actions/checkout@v2
      - name: Configure
        run: ./config.sh --platform unix-devel --enable-asan
      - name: Build
        run: $MZX_MAKE
      - name: Run tests
        run: $MZX_MAKE test

  UndefinedBehaviorSanitizer:
    runs-on: ubuntu-latest
    env:
      CC: clang
      CXX: clang++
      UBSAN_OPTIONS: print_stacktrace=1
    steps:
      - name: Install dependencies
        run: sudo apt update && sudo apt install -y --no-install-recommends $MZXDEPS_DEBIAN_SDL2
      - uses: actions/checkout@v2
      - name: Configure
        run: ./config.sh --platform unix-devel --enable-ubsan
      - name: Build
        run: $MZX_MAKE
      - name: Run tests
        run: $MZX_MAKE test
